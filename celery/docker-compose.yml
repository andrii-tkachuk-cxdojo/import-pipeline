version: "3.9"

services:
  celery-redis:
    image: redis:latest
    container_name: celery-redis
    restart: always
    networks:
      - celery-network
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]

  celery-worker:
    build:
      context: .
      dockerfile: docker/Dockerfile-worker
    container_name: celery-worker
    restart: always
    command: >
      sh -c "celery -A celery_conf.celery_app worker -l info -n worker -Q case"
    volumes:
      - .:/app
    networks:
      - celery-network
    env_file:
      - .env
    depends_on:
      - celery-redis

  celery-beat:
    build:
      context: .
      dockerfile: docker/Dockerfile-worker
    container_name: celery-beat
    restart: always
    command: >
      sh -c "celery -A celery_conf.celery_app beat -l info"
    volumes:
      - .:/app
    networks:
      - celery-network
    env_file:
      - .env
    depends_on:
      - celery-redis

  celery-flower:
    build:
      context: .
      dockerfile: docker/Dockerfile-worker
    container_name: celery-flower
    restart: always
    command: >
      sh -c "celery flower --basic_auth=${FLOWER_USER}:${FLOWER_PASSWORD}"
    environment:
      - CELERY_BROKER_URL=${CELERY_BROKER_URL}
      - FLOWER_PORT=${FLOWER_PORT}
    networks:
      - celery-network
    ports:
      - ${FLOWER_PORT}:${FLOWER_PORT}
    depends_on:
      - celery-worker
      - celery-beat

networks:
  celery-network:
    driver: bridge